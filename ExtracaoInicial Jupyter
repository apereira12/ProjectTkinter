{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d7155c26",
   "metadata": {},
   "outputs": [],
   "source": [
    "#raspa tela\n",
    "import requests\n",
    "from bs4 import BeautifulSoup\n",
    "#dataframe\n",
    "import pandas as pd\n",
    "#gráficos\n",
    "import matplotlib.pyplot as plt\n",
    "#data e hora.\n",
    "import datetime as dtm\n",
    "from datetime import date as dt\n",
    "import time\n",
    "import re\n",
    "import numpy as np\n",
    "from unidecode import unidecode\n",
    "from datetime import datetime\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fb1afdc3",
   "metadata": {},
   "source": [
    "# Informando período"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e81fc8ca-6b58-40cf-9e22-5eb3646818cf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Informe o Ano inicial:  2018\n",
      "Informe o Ano final:  2023\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Lembrando que quanto mais anos, mais demorado será a extração\n"
     ]
    }
   ],
   "source": [
    "#definir quais anos você quer analisar\n",
    "AnoInicial=int(input(\"Informe o Ano inicial: \"))\n",
    "AnoFinal=int(input(\"Informe o Ano final: \"))\n",
    "print(\"Lembrando que quanto mais anos, mais demorado será a extração\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c9cc7819-54a5-447c-82bd-28321a9061b6",
   "metadata": {},
   "source": [
    "# Processo de Web Scraping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "642286ea-90e7-41cb-b3ad-ddf19ce6b892",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Tempo decorrido: 1852.33 segundos\n"
     ]
    }
   ],
   "source": [
    "tempo_inicio = time.time()\n",
    "\n",
    "linkRaiz = 'https://www.cbf.com.br/futebol-brasileiro/competicoes/campeonato-brasileiro-serie-a'\n",
    "listaLinks = []\n",
    "ListaFinal = []\n",
    "jogo=[]\n",
    "Info = []\n",
    "Rodada = []\n",
    "j = []\n",
    "x = []\n",
    "\n",
    "#Definindo Range e iniciando o BeautifulSoup\n",
    "for ano in range(AnoInicial, AnoFinal+1):\n",
    "    for nj in range(1,381):\n",
    "        linkJogo = f\"{linkRaiz}/{ano}/{nj}\"\n",
    "        listaLinks.append(linkJogo)\n",
    "        valorweb = requests.get(linkJogo)\n",
    "        soup = BeautifulSoup(valorweb.content, 'html.parser')\n",
    "\n",
    "#Pegando informações referente ao jogo e adicionando as listas  \n",
    "        title = soup.title.text\n",
    "        jogos=soup.find(class_='color-white block text-1').text\n",
    "        jogo.append(jogos)\n",
    "        ListaFinal.append(title)\n",
    "        #pegando informações sobre o Local do jogo\n",
    "        localdthr_jogo = soup.find_all(class_='text-2 p-r-20')\n",
    "        Texto = [element.get_text(strip=True) for element in localdthr_jogo]\n",
    "        Info.append(Texto)\n",
    "        #Numerojogo\n",
    "        jogos=soup.find(class_='color-white block text-1').text\n",
    "        jogos = jogos.split(':')[1].strip()\n",
    "        \n",
    "        #Lista de gol por jogador\n",
    "        GolJog = soup.find_all(class_='hidden-sm hidden-md hidden-lg m-t-20')\n",
    "        i = [element.get_text(strip=True) for element in GolJog]\n",
    "        j.extend(i)\n",
    "\n",
    "        #lista de gol por time\n",
    "        captTimes = soup.find_all(class_='time-nome color-white')\n",
    "        Texto = [element.get_text(strip=True) for element in captTimes]\n",
    "        x.extend(Texto)\n",
    "           \n",
    "#Matriz de Gols de jogadores por time\n",
    "matriz = [[i_item, Texto_item] for i_item, Texto_item in zip(j,x) if j and x != '']\n",
    "\n",
    "#tempo de execução\n",
    "tempo_final = time.time()\n",
    "tempo_decorrido = tempo_final - tempo_inicio\n",
    "\n",
    "\n",
    "print(f'Tempo decorrido: {tempo_decorrido:.2f} segundos')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7ab0711-2669-4518-b3ed-38120bedf0ee",
   "metadata": {},
   "source": [
    "# Iniciar o Processo de DataFrame para acompanhamento dos Jogos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "cbb46318-839a-426b-af32-fdd84f1010a1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2280"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Estadio = []\n",
    "Cidade = []\n",
    "Estado = []\n",
    "Data = []\n",
    "Horario = []\n",
    "for item in Info:\n",
    "    if len(item)>2:\n",
    "            texto = item[0]  # O nome do estádio está na primeira posição de cada item\n",
    "            padrao_estadio = r'^(.*?) -'\n",
    "            resultado_estadio = re.search(padrao_estadio, texto)\n",
    "            if resultado_estadio:\n",
    "                nome_estadio = resultado_estadio.group(1)\n",
    "                Estadio.append(nome_estadio)\n",
    "            padrao_cidade = r'- (.*?) -'\n",
    "            resultado_cidade = re.search(padrao_cidade, texto)\n",
    "            if resultado_cidade:\n",
    "                nome_cidade = resultado_cidade.group(1)\n",
    "                Cidade.append(nome_cidade)\n",
    "            padrao_estado = r'- ([A-Z]{2})$'\n",
    "            resultado_estado = re.search(padrao_estado, texto)\n",
    "            if resultado_estado:\n",
    "                estado = resultado_estado.group(1)\n",
    "                Estado.append(estado)\n",
    "            texto1 = item[1]\n",
    "            padrao_data = r'\\w+, \\d+ de \\w+ de \\d+'\n",
    "            datas_encontradas = re.search(padrao_data, texto1)\n",
    "            if datas_encontradas:\n",
    "                data = datas_encontradas.group(0)\n",
    "                Data.append(data)\n",
    "    else:\n",
    "        Estadio.append(\"Não definido\")\n",
    "        Cidade.append(\"Não definido\")\n",
    "        Estado.append(\"Não definido\")\n",
    "        Data.append(\"Não definido\")\n",
    "        \n",
    "for item in Info:\n",
    "    if len(item) > 2:\n",
    "        horario = item[2]\n",
    "        if horario != \"A definir\":\n",
    "            Horario.append(horario)\n",
    "        else:\n",
    "            Horario.append(\"Não definido\")\n",
    "    else:\n",
    "        Horario.append(\"Não definido\")\n",
    "len(Horario)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ca084085-c817-4586-944e-acf4f5199034",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Coletar Número Jogo\n",
    "NumeroJogo=[]\n",
    "for i in jogo:\n",
    "    j=i.split('Jogo:')[1].strip()\n",
    "    NumeroJogo.append(j)\n",
    "\n",
    "\n",
    "#Coletar Time da Casa\n",
    "time_casa = []\n",
    "UF_Time_Mandante = []\n",
    "for partidas in ListaFinal:\n",
    "    times = partidas.split(' x ')\n",
    "    timeCasa = times[0].strip()  # Remover espaços extras no início e no final\n",
    "    nome_time_casa = timeCasa.split(' - ')[0].strip()  # Separar o nome do time da parte do estado\n",
    "    Estado= timeCasa.split(' - ')[1].strip()\n",
    "    Estado = Estado.split(' ')[0]\n",
    "    time_casa.append(nome_time_casa )\n",
    "    UF_Time_Mandante.append(Estado)\n",
    "\n",
    "\n",
    "#coletar Visitante\n",
    "time_visitante = []\n",
    "UF_Time_Visitante = []\n",
    "for partidas in ListaFinal:\n",
    "    times = partidas.split(' x ')\n",
    "    timeVisitante = times[1].strip()  # Remover espaços extras no início e no final\n",
    "    nome_time_visitante = timeVisitante.split(' - ')[0].strip() \n",
    "    nome_time_visitante1 = nome_time_visitante[2:]  # Remover o número no início\n",
    "    time_visitante.append(nome_time_visitante1)\n",
    "    Estado = timeVisitante.split('-')[1].strip()\n",
    "    UF_Time_Visitante.append(Estado)\n",
    "\n",
    "\n",
    "\n",
    "#coletar gols mandante\n",
    "gols_mandante = []\n",
    "\n",
    "for gols in ListaFinal:\n",
    "    gol_mandante = gols.split(' x ')[0].strip()  # Extrair os gols do time da casa\n",
    "    time = gol_mandante.split(' - ')[1].strip()\n",
    "    time=time[3:]\n",
    "    gols_mandante.append(time)\n",
    "\n",
    "#Coletar gols visitante\n",
    "gols_visitante=[]\n",
    "for gols in ListaFinal:\n",
    "    gols_visitantes=gols.split(' x ')[1].strip()\n",
    "    gols_visitantes=gols_visitantes.split(' - ')[0].strip()\n",
    "    gols_visitantes=gols_visitantes.split(' ')[0]\n",
    "    gols_visitante.append(gols_visitantes)\n",
    "\n",
    "#Coletar Ano\n",
    "anoJogo=[]\n",
    "for i in ListaFinal:\n",
    "    Ano_Jogos=i.split(' x ')[1].strip()\n",
    "    Ano_Jogos=Ano_Jogos.split(' - ')[3]\n",
    "    Ano_Jogos=Ano_Jogos[-4:]\n",
    "    anoJogo.append(Ano_Jogos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f205bf62-830c-46ad-9564-8bab3f29a9c4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Determinar quem venceu\n",
    "def vitoria(gols_mandante, gols_visitante):\n",
    "    if gols_mandante > gols_visitante:\n",
    "        return 'Mandante'\n",
    "    elif gols_mandante < gols_visitante:\n",
    "        return 'Visitante'\n",
    "    else:\n",
    "        return 'Empate'\n",
    "resultado=[vitoria(gols_mandante,gols_visitante) for gols_mandante,gols_visitante in zip(gols_mandante,gols_visitante)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "0abc97d6-7df0-448f-8db9-bf34d4f00af0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NumeroJogo</th>\n",
       "      <th>Data</th>\n",
       "      <th>Hora</th>\n",
       "      <th>Estadio</th>\n",
       "      <th>Cidade</th>\n",
       "      <th>UF</th>\n",
       "      <th>Quem Venceu?</th>\n",
       "      <th>AnoJogo</th>\n",
       "      <th>Time Mandante</th>\n",
       "      <th>UF Mandante</th>\n",
       "      <th>Gols Mandante</th>\n",
       "      <th>Time Visitante</th>\n",
       "      <th>UF Visitante</th>\n",
       "      <th>Gols Visitante</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Sábado, 14 de Abril de 2018</td>\n",
       "      <td>16:00</td>\n",
       "      <td>Mineirão</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>2018</td>\n",
       "      <td>Cruzeiro</td>\n",
       "      <td>MG</td>\n",
       "      <td>0</td>\n",
       "      <td>Grêmio</td>\n",
       "      <td>RS</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>19:00</td>\n",
       "      <td>Arena da Baixada</td>\n",
       "      <td>Curitiba</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2018</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>PR</td>\n",
       "      <td>5</td>\n",
       "      <td>Chapecoense</td>\n",
       "      <td>SC</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>11:00</td>\n",
       "      <td>Independência</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2018</td>\n",
       "      <td>America Fc</td>\n",
       "      <td>MG</td>\n",
       "      <td>3</td>\n",
       "      <td>Sport</td>\n",
       "      <td>PE</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Sábado, 14 de Abril de 2018</td>\n",
       "      <td>19:00</td>\n",
       "      <td>Manoel Barradas</td>\n",
       "      <td>Salvador</td>\n",
       "      <td>PR</td>\n",
       "      <td>Empate</td>\n",
       "      <td>2018</td>\n",
       "      <td>Vitória</td>\n",
       "      <td>BA</td>\n",
       "      <td>2</td>\n",
       "      <td>Flamengo</td>\n",
       "      <td>RJ</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>16:00</td>\n",
       "      <td>São Januário</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2018</td>\n",
       "      <td>Vasco da Gama</td>\n",
       "      <td>RJ</td>\n",
       "      <td>2</td>\n",
       "      <td>Atlético</td>\n",
       "      <td>MG</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2275</th>\n",
       "      <td>376</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Mineirão</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>Empate</td>\n",
       "      <td>2023</td>\n",
       "      <td>Cruzeiro Saf</td>\n",
       "      <td>MG</td>\n",
       "      <td>1</td>\n",
       "      <td>Palmeiras</td>\n",
       "      <td>SP</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2276</th>\n",
       "      <td>377</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Beira-Rio</td>\n",
       "      <td>Porto Alegre</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2023</td>\n",
       "      <td>Internacional</td>\n",
       "      <td>RS</td>\n",
       "      <td>3</td>\n",
       "      <td>Botafogo</td>\n",
       "      <td>RJ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2277</th>\n",
       "      <td>378</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Couto Pereira</td>\n",
       "      <td>Curitiba</td>\n",
       "      <td>PR</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>2023</td>\n",
       "      <td>Coritiba S.a.f.</td>\n",
       "      <td>PR</td>\n",
       "      <td>0</td>\n",
       "      <td>Corinthians</td>\n",
       "      <td>SP</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2278</th>\n",
       "      <td>379</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Arena Fonte Nova</td>\n",
       "      <td>Salvador</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2023</td>\n",
       "      <td>Bahia</td>\n",
       "      <td>BA</td>\n",
       "      <td>4</td>\n",
       "      <td>Atlético Mineiro Saf</td>\n",
       "      <td>MG</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2279</th>\n",
       "      <td>380</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Arena Pantanal</td>\n",
       "      <td>Cuiaba</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2023</td>\n",
       "      <td>Cuiabá Saf</td>\n",
       "      <td>MT</td>\n",
       "      <td>3</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>PR</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2280 rows × 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     NumeroJogo                            Data   Hora           Estadio  \\\n",
       "0             1     Sábado, 14 de Abril de 2018  16:00          Mineirão   \n",
       "1             2    Domingo, 15 de Abril de 2018  19:00  Arena da Baixada   \n",
       "2             3    Domingo, 15 de Abril de 2018  11:00     Independência   \n",
       "3             4     Sábado, 14 de Abril de 2018  19:00   Manoel Barradas   \n",
       "4             5    Domingo, 15 de Abril de 2018  16:00      São Januário   \n",
       "...         ...                             ...    ...               ...   \n",
       "2275        376  Quarta, 06 de Dezembro de 2023  21:30          Mineirão   \n",
       "2276        377  Quarta, 06 de Dezembro de 2023  21:30         Beira-Rio   \n",
       "2277        378  Quarta, 06 de Dezembro de 2023  21:30     Couto Pereira   \n",
       "2278        379  Quarta, 06 de Dezembro de 2023  21:30  Arena Fonte Nova   \n",
       "2279        380  Quarta, 06 de Dezembro de 2023  21:30    Arena Pantanal   \n",
       "\n",
       "              Cidade  UF Quem Venceu? AnoJogo         Time Mandante  \\\n",
       "0     Belo Horizonte  PR    Visitante    2018              Cruzeiro   \n",
       "1           Curitiba  PR     Mandante    2018  Athletico Paranaense   \n",
       "2     Belo Horizonte  PR     Mandante    2018            America Fc   \n",
       "3           Salvador  PR       Empate    2018               Vitória   \n",
       "4     Rio de Janeiro  PR     Mandante    2018         Vasco da Gama   \n",
       "...              ...  ..          ...     ...                   ...   \n",
       "2275  Belo Horizonte  PR       Empate    2023          Cruzeiro Saf   \n",
       "2276    Porto Alegre  PR     Mandante    2023         Internacional   \n",
       "2277        Curitiba  PR    Visitante    2023       Coritiba S.a.f.   \n",
       "2278        Salvador  PR     Mandante    2023                 Bahia   \n",
       "2279          Cuiaba  PR     Mandante    2023            Cuiabá Saf   \n",
       "\n",
       "     UF Mandante Gols Mandante        Time Visitante UF Visitante  \\\n",
       "0             MG             0                Grêmio           RS   \n",
       "1             PR             5           Chapecoense           SC   \n",
       "2             MG             3                 Sport           PE   \n",
       "3             BA             2              Flamengo           RJ   \n",
       "4             RJ             2              Atlético           MG   \n",
       "...          ...           ...                   ...          ...   \n",
       "2275          MG             1             Palmeiras           SP   \n",
       "2276          RS             3              Botafogo           RJ   \n",
       "2277          PR             0           Corinthians           SP   \n",
       "2278          BA             4  Atlético Mineiro Saf           MG   \n",
       "2279          MT             3  Athletico Paranaense           PR   \n",
       "\n",
       "     Gols Visitante  \n",
       "0                 1  \n",
       "1                 1  \n",
       "2                 0  \n",
       "3                 2  \n",
       "4                 1  \n",
       "...             ...  \n",
       "2275              1  \n",
       "2276              1  \n",
       "2277              2  \n",
       "2278              1  \n",
       "2279              0  \n",
       "\n",
       "[2280 rows x 14 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Criando o DataFrame \n",
    "data = {'NumeroJogo':NumeroJogo,'Data':Data,'Hora':Horario,'Estadio':Estadio,'Cidade':Cidade,'UF':Estado, 'Quem Venceu?':resultado, 'AnoJogo':anoJogo, 'Time Mandante':time_casa,'UF Mandante': UF_Time_Mandante , 'Gols Mandante':gols_mandante,'Time Visitante':time_visitante,'UF Visitante': UF_Time_Visitante,'Gols Visitante':gols_visitante}\n",
    "df = pd.DataFrame(data)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "285b309e-b020-46ac-8c98-acf7603fa376",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NumeroJogo</th>\n",
       "      <th>Data</th>\n",
       "      <th>Hora</th>\n",
       "      <th>Estadio</th>\n",
       "      <th>Cidade</th>\n",
       "      <th>UF</th>\n",
       "      <th>Quem Venceu?</th>\n",
       "      <th>AnoJogo</th>\n",
       "      <th>Rodada</th>\n",
       "      <th>Time Mandante</th>\n",
       "      <th>UF Mandante</th>\n",
       "      <th>Gols Mandante</th>\n",
       "      <th>Time Visitante</th>\n",
       "      <th>UF Visitante</th>\n",
       "      <th>Gols Visitante</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Sábado, 14 de Abril de 2018</td>\n",
       "      <td>16:00</td>\n",
       "      <td>Mineirão</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Cruzeiro</td>\n",
       "      <td>MG</td>\n",
       "      <td>0</td>\n",
       "      <td>Grêmio</td>\n",
       "      <td>RS</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>19:00</td>\n",
       "      <td>Arena da Baixada</td>\n",
       "      <td>Curitiba</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>PR</td>\n",
       "      <td>5</td>\n",
       "      <td>Chapecoense</td>\n",
       "      <td>SC</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>11:00</td>\n",
       "      <td>Independência</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>America Fc</td>\n",
       "      <td>MG</td>\n",
       "      <td>3</td>\n",
       "      <td>Sport</td>\n",
       "      <td>PE</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Sábado, 14 de Abril de 2018</td>\n",
       "      <td>19:00</td>\n",
       "      <td>Manoel Barradas</td>\n",
       "      <td>Salvador</td>\n",
       "      <td>PR</td>\n",
       "      <td>Empate</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Vitória</td>\n",
       "      <td>BA</td>\n",
       "      <td>2</td>\n",
       "      <td>Flamengo</td>\n",
       "      <td>RJ</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>16:00</td>\n",
       "      <td>São Januário</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Vasco da Gama</td>\n",
       "      <td>RJ</td>\n",
       "      <td>2</td>\n",
       "      <td>Atlético</td>\n",
       "      <td>MG</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2275</th>\n",
       "      <td>376</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Mineirão</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>Empate</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "      <td>Cruzeiro Saf</td>\n",
       "      <td>MG</td>\n",
       "      <td>1</td>\n",
       "      <td>Palmeiras</td>\n",
       "      <td>SP</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2276</th>\n",
       "      <td>377</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Beira-Rio</td>\n",
       "      <td>Porto Alegre</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "      <td>Internacional</td>\n",
       "      <td>RS</td>\n",
       "      <td>3</td>\n",
       "      <td>Botafogo</td>\n",
       "      <td>RJ</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2277</th>\n",
       "      <td>378</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Couto Pereira</td>\n",
       "      <td>Curitiba</td>\n",
       "      <td>PR</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "      <td>Coritiba Saf</td>\n",
       "      <td>PR</td>\n",
       "      <td>0</td>\n",
       "      <td>Corinthians</td>\n",
       "      <td>SP</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2278</th>\n",
       "      <td>379</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Arena Fonte Nova</td>\n",
       "      <td>Salvador</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "      <td>Bahia</td>\n",
       "      <td>BA</td>\n",
       "      <td>4</td>\n",
       "      <td>Atlético Mineiro Saf</td>\n",
       "      <td>MG</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2279</th>\n",
       "      <td>380</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Arena Pantanal</td>\n",
       "      <td>Cuiaba</td>\n",
       "      <td>PR</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "      <td>Cuiabá Saf</td>\n",
       "      <td>MT</td>\n",
       "      <td>3</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>PR</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2280 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      NumeroJogo                            Data   Hora           Estadio  \\\n",
       "0              1     Sábado, 14 de Abril de 2018  16:00          Mineirão   \n",
       "1              2    Domingo, 15 de Abril de 2018  19:00  Arena da Baixada   \n",
       "2              3    Domingo, 15 de Abril de 2018  11:00     Independência   \n",
       "3              4     Sábado, 14 de Abril de 2018  19:00   Manoel Barradas   \n",
       "4              5    Domingo, 15 de Abril de 2018  16:00      São Januário   \n",
       "...          ...                             ...    ...               ...   \n",
       "2275         376  Quarta, 06 de Dezembro de 2023  21:30          Mineirão   \n",
       "2276         377  Quarta, 06 de Dezembro de 2023  21:30         Beira-Rio   \n",
       "2277         378  Quarta, 06 de Dezembro de 2023  21:30     Couto Pereira   \n",
       "2278         379  Quarta, 06 de Dezembro de 2023  21:30  Arena Fonte Nova   \n",
       "2279         380  Quarta, 06 de Dezembro de 2023  21:30    Arena Pantanal   \n",
       "\n",
       "              Cidade  UF Quem Venceu? AnoJogo  Rodada         Time Mandante  \\\n",
       "0     Belo Horizonte  PR    Visitante    2018       1              Cruzeiro   \n",
       "1           Curitiba  PR     Mandante    2018       1  Athletico Paranaense   \n",
       "2     Belo Horizonte  PR     Mandante    2018       1            America Fc   \n",
       "3           Salvador  PR       Empate    2018       1               Vitória   \n",
       "4     Rio de Janeiro  PR     Mandante    2018       1         Vasco da Gama   \n",
       "...              ...  ..          ...     ...     ...                   ...   \n",
       "2275  Belo Horizonte  PR       Empate    2023      38          Cruzeiro Saf   \n",
       "2276    Porto Alegre  PR     Mandante    2023      38         Internacional   \n",
       "2277        Curitiba  PR    Visitante    2023      38          Coritiba Saf   \n",
       "2278        Salvador  PR     Mandante    2023      38                 Bahia   \n",
       "2279          Cuiaba  PR     Mandante    2023      38            Cuiabá Saf   \n",
       "\n",
       "     UF Mandante  Gols Mandante        Time Visitante UF Visitante  \\\n",
       "0             MG              0                Grêmio           RS   \n",
       "1             PR              5           Chapecoense           SC   \n",
       "2             MG              3                 Sport           PE   \n",
       "3             BA              2              Flamengo           RJ   \n",
       "4             RJ              2              Atlético           MG   \n",
       "...          ...            ...                   ...          ...   \n",
       "2275          MG              1             Palmeiras           SP   \n",
       "2276          RS              3              Botafogo           RJ   \n",
       "2277          PR              0           Corinthians           SP   \n",
       "2278          BA              4  Atlético Mineiro Saf           MG   \n",
       "2279          MT              3  Athletico Paranaense           PR   \n",
       "\n",
       "      Gols Visitante  \n",
       "0                  1  \n",
       "1                  1  \n",
       "2                  0  \n",
       "3                  2  \n",
       "4                  1  \n",
       "...              ...  \n",
       "2275               1  \n",
       "2276               1  \n",
       "2277               2  \n",
       "2278               1  \n",
       "2279               0  \n",
       "\n",
       "[2280 rows x 15 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Excluindo jogos que ainda não ocorreram \n",
    "df['Gols Visitante'] = pd.to_numeric(df['Gols Visitante'], errors='coerce').astype('Int64')\n",
    "df['Gols Mandante'] = pd.to_numeric(df['Gols Mandante'], errors='coerce').astype('Int64')\n",
    "df['NumeroJogo'] = pd.to_numeric(df['NumeroJogo'], errors='coerce').astype('Int64')\n",
    "df['Rodada'] = df['NumeroJogo'].apply(lambda num_jogo: int(num_jogo / 10) if num_jogo % 10 == 0 else int(num_jogo // 10) + 1)\n",
    "df['Time Mandante'] = df['Time Mandante'].str.replace('.', '')\n",
    "df['Time Visitante'] = df['Time Visitante'].str.replace('.', '')\n",
    "df = df.dropna(subset=['Gols Visitante'])\n",
    "X = ['NumeroJogo', 'Data','Hora','Estadio', 'Cidade','UF','Quem Venceu?', 'AnoJogo', 'Rodada', 'Time Mandante', 'UF Mandante', 'Gols Mandante', 'Time Visitante', 'UF Visitante', 'Gols Visitante']\n",
    "df = df[X]\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5626b2ef-78ec-4f0a-a840-ae5c2470107d",
   "metadata": {},
   "source": [
    "### Acompanhar desempenho dos times Individualmente"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "582fcca2-27f9-4d9e-b14a-a9aacbc634bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NumeroJogo</th>\n",
       "      <th>Time</th>\n",
       "      <th>UF Time</th>\n",
       "      <th>Gols Feitos</th>\n",
       "      <th>Estadio</th>\n",
       "      <th>Cidade</th>\n",
       "      <th>UF</th>\n",
       "      <th>Hora</th>\n",
       "      <th>Data</th>\n",
       "      <th>AnoJogo</th>\n",
       "      <th>Gols Sofrido</th>\n",
       "      <th>Mandante/Visitante</th>\n",
       "      <th>Pontos</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Cruzeiro</td>\n",
       "      <td>MG</td>\n",
       "      <td>0</td>\n",
       "      <td>Mineirão</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>16:00</td>\n",
       "      <td>Sábado, 14 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>PR</td>\n",
       "      <td>5</td>\n",
       "      <td>Arena da Baixada</td>\n",
       "      <td>Curitiba</td>\n",
       "      <td>PR</td>\n",
       "      <td>19:00</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>America Fc</td>\n",
       "      <td>MG</td>\n",
       "      <td>3</td>\n",
       "      <td>Independência</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>11:00</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>0</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Vitória</td>\n",
       "      <td>BA</td>\n",
       "      <td>2</td>\n",
       "      <td>Manoel Barradas</td>\n",
       "      <td>Salvador</td>\n",
       "      <td>PR</td>\n",
       "      <td>19:00</td>\n",
       "      <td>Sábado, 14 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>2</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Vasco da Gama</td>\n",
       "      <td>RJ</td>\n",
       "      <td>2</td>\n",
       "      <td>São Januário</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>PR</td>\n",
       "      <td>16:00</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4555</th>\n",
       "      <td>376</td>\n",
       "      <td>Palmeiras</td>\n",
       "      <td>SP</td>\n",
       "      <td>1</td>\n",
       "      <td>Mineirão</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>1</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4556</th>\n",
       "      <td>377</td>\n",
       "      <td>Botafogo</td>\n",
       "      <td>RJ</td>\n",
       "      <td>1</td>\n",
       "      <td>Beira-Rio</td>\n",
       "      <td>Porto Alegre</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>3</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4557</th>\n",
       "      <td>378</td>\n",
       "      <td>Corinthians</td>\n",
       "      <td>SP</td>\n",
       "      <td>2</td>\n",
       "      <td>Couto Pereira</td>\n",
       "      <td>Curitiba</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>0</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4558</th>\n",
       "      <td>379</td>\n",
       "      <td>Atlético Mineiro Saf</td>\n",
       "      <td>MG</td>\n",
       "      <td>1</td>\n",
       "      <td>Arena Fonte Nova</td>\n",
       "      <td>Salvador</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>4</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4559</th>\n",
       "      <td>380</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>PR</td>\n",
       "      <td>0</td>\n",
       "      <td>Arena Pantanal</td>\n",
       "      <td>Cuiaba</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>3</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4560 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      NumeroJogo                  Time UF Time  Gols Feitos           Estadio  \\\n",
       "0              1              Cruzeiro      MG            0          Mineirão   \n",
       "1              2  Athletico Paranaense      PR            5  Arena da Baixada   \n",
       "2              3            America Fc      MG            3     Independência   \n",
       "3              4               Vitória      BA            2   Manoel Barradas   \n",
       "4              5         Vasco da Gama      RJ            2      São Januário   \n",
       "...          ...                   ...     ...          ...               ...   \n",
       "4555         376             Palmeiras      SP            1          Mineirão   \n",
       "4556         377              Botafogo      RJ            1         Beira-Rio   \n",
       "4557         378           Corinthians      SP            2     Couto Pereira   \n",
       "4558         379  Atlético Mineiro Saf      MG            1  Arena Fonte Nova   \n",
       "4559         380  Athletico Paranaense      PR            0    Arena Pantanal   \n",
       "\n",
       "              Cidade  UF   Hora                            Data AnoJogo  \\\n",
       "0     Belo Horizonte  PR  16:00     Sábado, 14 de Abril de 2018    2018   \n",
       "1           Curitiba  PR  19:00    Domingo, 15 de Abril de 2018    2018   \n",
       "2     Belo Horizonte  PR  11:00    Domingo, 15 de Abril de 2018    2018   \n",
       "3           Salvador  PR  19:00     Sábado, 14 de Abril de 2018    2018   \n",
       "4     Rio de Janeiro  PR  16:00    Domingo, 15 de Abril de 2018    2018   \n",
       "...              ...  ..    ...                             ...     ...   \n",
       "4555  Belo Horizonte  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "4556    Porto Alegre  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "4557        Curitiba  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "4558        Salvador  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "4559          Cuiaba  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "\n",
       "      Gols Sofrido Mandante/Visitante  Pontos  \n",
       "0                1           Mandante       0  \n",
       "1                1           Mandante       3  \n",
       "2                0           Mandante       3  \n",
       "3                2           Mandante       1  \n",
       "4                1           Mandante       3  \n",
       "...            ...                ...     ...  \n",
       "4555             1          Visitante       1  \n",
       "4556             3          Visitante       0  \n",
       "4557             0          Visitante       3  \n",
       "4558             4          Visitante       0  \n",
       "4559             3          Visitante       0  \n",
       "\n",
       "[4560 rows x 13 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Copiar Dataframe anterior\n",
    "dx_local = df[['NumeroJogo', 'Time Mandante','UF Mandante', 'Gols Mandante', 'Quem Venceu?','Estadio', 'Cidade','UF', 'Hora', 'Data', 'AnoJogo', 'Gols Visitante']].copy()\n",
    "dx_visitante = df[['NumeroJogo', 'Time Visitante','UF Visitante', 'Gols Visitante', 'Quem Venceu?', 'Estadio', 'Cidade','UF', 'Hora', 'Data','AnoJogo', 'Gols Mandante']].copy()\n",
    "dx_local.columns = ['NumeroJogo', 'Time','UF Time', 'Gols Feitos', 'Quem Venceu?','Estadio', 'Cidade','UF', 'Hora', 'Data', 'AnoJogo', 'Gols Sofrido']\n",
    "dx_local['Mandante/Visitante'] = 'Mandante'\n",
    "dx_visitante.columns = ['NumeroJogo', 'Time','UF Time', 'Gols Feitos', 'Quem Venceu?', 'Estadio', 'Cidade','UF', 'Hora', 'Data', 'AnoJogo', 'Gols Sofrido']\n",
    "dx_visitante['Mandante/Visitante'] = 'Visitante'\n",
    "#concatenar\n",
    "dx = pd.concat([dx_local, dx_visitante], ignore_index=True)\n",
    "#Demonstrar pontuação\n",
    "dx['Pontos'] = dx.apply(lambda row: 3 if row['Quem Venceu?'] == row['Mandante/Visitante'] else (1 if row['Quem Venceu?'] == 'Empate' else 0), axis=1)\n",
    "dx = dx.drop('Quem Venceu?', axis=1)\n",
    "dx"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0e5f21a1-d826-4cae-835a-147b4041fdd9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>NumeroJogo</th>\n",
       "      <th>Time</th>\n",
       "      <th>UF Time</th>\n",
       "      <th>Gols Feitos</th>\n",
       "      <th>Estadio</th>\n",
       "      <th>Cidade</th>\n",
       "      <th>UF</th>\n",
       "      <th>Hora</th>\n",
       "      <th>Data</th>\n",
       "      <th>AnoJogo</th>\n",
       "      <th>Gols Sofrido</th>\n",
       "      <th>Mandante/Visitante</th>\n",
       "      <th>Pontos</th>\n",
       "      <th>Rodada</th>\n",
       "      <th>Resultado</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Cruzeiro</td>\n",
       "      <td>MG</td>\n",
       "      <td>0</td>\n",
       "      <td>Mineirão</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>16:00</td>\n",
       "      <td>Sábado, 14 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>Derrota</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>PR</td>\n",
       "      <td>5</td>\n",
       "      <td>Arena da Baixada</td>\n",
       "      <td>Curitiba</td>\n",
       "      <td>PR</td>\n",
       "      <td>19:00</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Vitória</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>America Mineiro</td>\n",
       "      <td>MG</td>\n",
       "      <td>3</td>\n",
       "      <td>Independência</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>11:00</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>0</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Vitória</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Vitoria</td>\n",
       "      <td>BA</td>\n",
       "      <td>2</td>\n",
       "      <td>Manoel Barradas</td>\n",
       "      <td>Salvador</td>\n",
       "      <td>PR</td>\n",
       "      <td>19:00</td>\n",
       "      <td>Sábado, 14 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>2</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Empatou</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Vasco Da Gama</td>\n",
       "      <td>RJ</td>\n",
       "      <td>2</td>\n",
       "      <td>São Januário</td>\n",
       "      <td>Rio de Janeiro</td>\n",
       "      <td>PR</td>\n",
       "      <td>16:00</td>\n",
       "      <td>Domingo, 15 de Abril de 2018</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "      <td>Mandante</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Vitória</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4555</th>\n",
       "      <td>376</td>\n",
       "      <td>Palmeiras</td>\n",
       "      <td>SP</td>\n",
       "      <td>1</td>\n",
       "      <td>Mineirão</td>\n",
       "      <td>Belo Horizonte</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>1</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>1</td>\n",
       "      <td>38</td>\n",
       "      <td>Empatou</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4556</th>\n",
       "      <td>377</td>\n",
       "      <td>Botafogo</td>\n",
       "      <td>RJ</td>\n",
       "      <td>1</td>\n",
       "      <td>Beira-Rio</td>\n",
       "      <td>Porto Alegre</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>3</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>0</td>\n",
       "      <td>38</td>\n",
       "      <td>Derrota</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4557</th>\n",
       "      <td>378</td>\n",
       "      <td>Corinthians</td>\n",
       "      <td>SP</td>\n",
       "      <td>2</td>\n",
       "      <td>Couto Pereira</td>\n",
       "      <td>Curitiba</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>0</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>3</td>\n",
       "      <td>38</td>\n",
       "      <td>Vitória</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4558</th>\n",
       "      <td>379</td>\n",
       "      <td>Atletico Mineiro</td>\n",
       "      <td>MG</td>\n",
       "      <td>1</td>\n",
       "      <td>Arena Fonte Nova</td>\n",
       "      <td>Salvador</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>4</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>0</td>\n",
       "      <td>38</td>\n",
       "      <td>Derrota</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4559</th>\n",
       "      <td>380</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>PR</td>\n",
       "      <td>0</td>\n",
       "      <td>Arena Pantanal</td>\n",
       "      <td>Cuiaba</td>\n",
       "      <td>PR</td>\n",
       "      <td>21:30</td>\n",
       "      <td>Quarta, 06 de Dezembro de 2023</td>\n",
       "      <td>2023</td>\n",
       "      <td>3</td>\n",
       "      <td>Visitante</td>\n",
       "      <td>0</td>\n",
       "      <td>38</td>\n",
       "      <td>Derrota</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>4560 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      NumeroJogo                  Time UF Time  Gols Feitos           Estadio  \\\n",
       "0              1              Cruzeiro      MG            0          Mineirão   \n",
       "1              2  Athletico Paranaense      PR            5  Arena da Baixada   \n",
       "2              3       America Mineiro      MG            3     Independência   \n",
       "3              4               Vitoria      BA            2   Manoel Barradas   \n",
       "4              5         Vasco Da Gama      RJ            2      São Januário   \n",
       "...          ...                   ...     ...          ...               ...   \n",
       "4555         376             Palmeiras      SP            1          Mineirão   \n",
       "4556         377              Botafogo      RJ            1         Beira-Rio   \n",
       "4557         378           Corinthians      SP            2     Couto Pereira   \n",
       "4558         379      Atletico Mineiro      MG            1  Arena Fonte Nova   \n",
       "4559         380  Athletico Paranaense      PR            0    Arena Pantanal   \n",
       "\n",
       "              Cidade  UF   Hora                            Data AnoJogo  \\\n",
       "0     Belo Horizonte  PR  16:00     Sábado, 14 de Abril de 2018    2018   \n",
       "1           Curitiba  PR  19:00    Domingo, 15 de Abril de 2018    2018   \n",
       "2     Belo Horizonte  PR  11:00    Domingo, 15 de Abril de 2018    2018   \n",
       "3           Salvador  PR  19:00     Sábado, 14 de Abril de 2018    2018   \n",
       "4     Rio de Janeiro  PR  16:00    Domingo, 15 de Abril de 2018    2018   \n",
       "...              ...  ..    ...                             ...     ...   \n",
       "4555  Belo Horizonte  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "4556    Porto Alegre  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "4557        Curitiba  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "4558        Salvador  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "4559          Cuiaba  PR  21:30  Quarta, 06 de Dezembro de 2023    2023   \n",
       "\n",
       "      Gols Sofrido Mandante/Visitante  Pontos  Rodada Resultado  \n",
       "0                1           Mandante       0       1   Derrota  \n",
       "1                1           Mandante       3       1   Vitória  \n",
       "2                0           Mandante       3       1   Vitória  \n",
       "3                2           Mandante       1       1   Empatou  \n",
       "4                1           Mandante       3       1   Vitória  \n",
       "...            ...                ...     ...     ...       ...  \n",
       "4555             1          Visitante       1      38   Empatou  \n",
       "4556             3          Visitante       0      38   Derrota  \n",
       "4557             0          Visitante       3      38   Vitória  \n",
       "4558             4          Visitante       0      38   Derrota  \n",
       "4559             3          Visitante       0      38   Derrota  \n",
       "\n",
       "[4560 rows x 15 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Tratamento dos Times\n",
    "dx['Time'] = dx['Time'].apply(unidecode)\n",
    "dx['Time'] = dx['Time'].str.replace(r'\\s*S\\.?A\\.?F\\s*', '', regex=True, case=False)\n",
    "dx['Time'] = dx['Time'].apply(str.title)\n",
    "dx['Time'] = dx['Time'].apply(lambda x: x.replace('Fc', '').strip())  # Remove \"Fc\" e espaços antes e depois\n",
    "# Aplicar a lambda para modificar o valor da coluna 'Time' com base nas condições\n",
    "dx['Time'] = dx.apply(lambda row: 'Athletico Paranaense' if row['Time'] == 'Atletico' and row['UF Time'] == 'PR' else row['Time'],axis=1)\n",
    "dx['Time'] = dx.apply(lambda row: 'America Mineiro' if row['Time'] == 'America' and row['UF Time'] == 'MG' else row['Time'],axis=1)\n",
    "dx['Time'] = dx.apply(lambda row: 'Atletico Mineiro' if row['Time'] == 'Atletico' and row['UF Time'] == 'MG' else row['Time'],axis=1)\n",
    "dx['Time'] = dx.apply(lambda row: 'Atletico Goianiense' if row['Time'] == 'Atletico' and row['UF Time'] == 'GO' else row['Time'],axis=1)\n",
    "dx['Rodada'] = dx['NumeroJogo'].apply(lambda num_jogo: int(num_jogo / 10) if num_jogo % 10 == 0 else int(num_jogo // 10) + 1)\n",
    "dx['Resultado'] = dx.apply(lambda row: 'Vitória' if row['Pontos'] == 3 else ('Empatou' if row['Pontos'] == 1 else 'Derrota'), axis=1)\n",
    "\n",
    "dx\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fc256f7b-8569-486e-a1c1-b3ba1783785c",
   "metadata": {},
   "source": [
    "### Classificação dos times"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "bc01d1f6-250e-46c4-ac04-01e912894c86",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Time</th>\n",
       "      <th>Temporada</th>\n",
       "      <th>Pontos</th>\n",
       "      <th>Gols Feitos</th>\n",
       "      <th>Gols Sofrido</th>\n",
       "      <th>Saldo</th>\n",
       "      <th>Vitorias</th>\n",
       "      <th>Derrotas</th>\n",
       "      <th>Empates</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>Parana</td>\n",
       "      <td>2018</td>\n",
       "      <td>23</td>\n",
       "      <td>18</td>\n",
       "      <td>57</td>\n",
       "      <td>-39</td>\n",
       "      <td>4</td>\n",
       "      <td>23</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>Vitoria</td>\n",
       "      <td>2018</td>\n",
       "      <td>37</td>\n",
       "      <td>36</td>\n",
       "      <td>63</td>\n",
       "      <td>-27</td>\n",
       "      <td>9</td>\n",
       "      <td>19</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>America Mineiro</td>\n",
       "      <td>2018</td>\n",
       "      <td>40</td>\n",
       "      <td>30</td>\n",
       "      <td>47</td>\n",
       "      <td>-17</td>\n",
       "      <td>10</td>\n",
       "      <td>18</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>Sport</td>\n",
       "      <td>2018</td>\n",
       "      <td>42</td>\n",
       "      <td>35</td>\n",
       "      <td>57</td>\n",
       "      <td>-22</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>Vasco Da Gama</td>\n",
       "      <td>2018</td>\n",
       "      <td>43</td>\n",
       "      <td>41</td>\n",
       "      <td>48</td>\n",
       "      <td>-7</td>\n",
       "      <td>10</td>\n",
       "      <td>15</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Botafogo</td>\n",
       "      <td>2023</td>\n",
       "      <td>64</td>\n",
       "      <td>58</td>\n",
       "      <td>37</td>\n",
       "      <td>21</td>\n",
       "      <td>18</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Atletico Mineiro</td>\n",
       "      <td>2023</td>\n",
       "      <td>66</td>\n",
       "      <td>52</td>\n",
       "      <td>32</td>\n",
       "      <td>20</td>\n",
       "      <td>19</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>Flamengo</td>\n",
       "      <td>2023</td>\n",
       "      <td>66</td>\n",
       "      <td>56</td>\n",
       "      <td>42</td>\n",
       "      <td>14</td>\n",
       "      <td>19</td>\n",
       "      <td>10</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>Gremio</td>\n",
       "      <td>2023</td>\n",
       "      <td>68</td>\n",
       "      <td>63</td>\n",
       "      <td>56</td>\n",
       "      <td>7</td>\n",
       "      <td>21</td>\n",
       "      <td>12</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>Palmeiras</td>\n",
       "      <td>2023</td>\n",
       "      <td>70</td>\n",
       "      <td>64</td>\n",
       "      <td>33</td>\n",
       "      <td>31</td>\n",
       "      <td>20</td>\n",
       "      <td>8</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>120 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Time  Temporada  Pontos  Gols Feitos  Gols Sofrido  Saldo  \\\n",
       "95             Parana       2018      23           18            57    -39   \n",
       "119           Vitoria       2018      37           36            63    -27   \n",
       "0     America Mineiro       2018      40           30            47    -17   \n",
       "112             Sport       2018      42           35            57    -22   \n",
       "115     Vasco Da Gama       2018      43           41            48     -7   \n",
       "..                ...        ...     ...          ...           ...    ...   \n",
       "30           Botafogo       2023      64           58            37     21   \n",
       "18   Atletico Mineiro       2023      66           52            32     20   \n",
       "60           Flamengo       2023      66           56            42     14   \n",
       "80             Gremio       2023      68           63            56      7   \n",
       "94          Palmeiras       2023      70           64            33     31   \n",
       "\n",
       "     Vitorias  Derrotas  Empates  \n",
       "95          4        23       11  \n",
       "119         9        19       10  \n",
       "0          10        18       10  \n",
       "112        11        18        9  \n",
       "115        10        15       13  \n",
       "..        ...       ...      ...  \n",
       "30         18        10       10  \n",
       "18         19        10        9  \n",
       "60         19        10        9  \n",
       "80         21        12        5  \n",
       "94         20         8       10  \n",
       "\n",
       "[120 rows x 9 columns]"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Group by 'Time' and 'AnoJogo', calculate the sum of specified columns, and reset the index\n",
    "classificacao = dx.groupby(['Time', 'AnoJogo']).agg({'Pontos': 'sum', 'Gols Feitos': 'sum', 'Gols Sofrido': 'sum'}).reset_index()\n",
    "\n",
    "# Calculate 'Saldo' (goal difference) for each row\n",
    "classificacao['Saldo'] = classificacao['Gols Feitos'] - classificacao['Gols Sofrido']\n",
    "\n",
    "# Calcule 'Vitórias, empates e derrotas' para cada time e ano\n",
    "vitorias = dx.loc[dx['Pontos'] == 3].groupby(['Time', 'AnoJogo']).size().reset_index(name='Vitorias')\n",
    "derrotas = dx.loc[dx['Pontos'] == 0].groupby(['Time', 'AnoJogo']).size().reset_index(name='Derrotas')\n",
    "empates = dx.loc[dx['Pontos'] == 1].groupby(['Time', 'AnoJogo']).size().reset_index(name='Empates')\n",
    "\n",
    "\n",
    "# Juntando 'Vitorias' com 'classificacao'\n",
    "classificacao = pd.merge(classificacao, vitorias, on=['Time', 'AnoJogo'], how='left')\n",
    "\n",
    "# Juntando 'Derrotas' com 'classificacao'\n",
    "classificacao = pd.merge(classificacao, derrotas, on=['Time', 'AnoJogo'], how='left')\n",
    "\n",
    "# Juntando 'Empates' com 'classificacao'\n",
    "classificacao = pd.merge(classificacao, empates, on=['Time', 'AnoJogo'], how='left')\n",
    "\n",
    "\n",
    "classificacao.rename(columns={'AnoJogo': 'Temporada'}, inplace=True)\n",
    "\n",
    "# Preencha valores NaN com 0\n",
    "classificacao['Vitorias'] = classificacao['Vitorias'].fillna(0).astype(int)\n",
    "classificacao['Derrotas'] = classificacao['Derrotas'].fillna(0).astype(int)\n",
    "classificacao['Empates'] = classificacao['Empates'].fillna(0).astype(int)\n",
    "classificacao['Pontos'] = classificacao['Pontos'].fillna(0).astype(int)\n",
    "classificacao['Temporada'] = classificacao['Temporada'].fillna(0).astype(int)\n",
    "classificacao = classificacao.sort_values(['Temporada', 'Pontos'])\n",
    "classificacao"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1104ba1a-8378-4f2a-ba6f-3bec76fbc458",
   "metadata": {},
   "source": [
    "## Informação de Gols por jogador e time"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "29d5b07f-f44e-4a62-a79f-f4493955b6a9",
   "metadata": {},
   "source": [
    "### Alguns jogos os times não liberaram a escalação, então falta informação no site da CBF e consequentemente faltaram alguns gols dos atletas\n",
    "#### ex: jogo 5 (2023) - RB Bragantino VS Bahia "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5e1b7054-ef92-42cf-90c1-6cf826770a1c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Criando matriz para iterar jogos, times, jogador e jogos\n",
    "x = np.array(matriz)\n",
    "y = np.array(NumeroJogo)\n",
    "j = np.array(anoJogo)\n",
    "matriz1_reshaped = x.reshape(-1, 2, 2)\n",
    "\n",
    "resultado = []\n",
    "\n",
    "# Use um índice para rastrear o número do jogo da matriz 2\n",
    "indice_matriz2 = 0\n",
    "\n",
    "# Itere sobre a matriz 1 agrupando os registros em jogos e adicionando o número do jogo\n",
    "\n",
    "#pegando pares de elementos da lista x, combinando-os com informações de j e y e em seguida, adicionando essas informações a uma lista resultado\n",
    "for i in range(0, len(x), 2):\n",
    "    jogo = x[i:i + 2]\n",
    "    ano = j[indice_matriz2]  \n",
    "    numero_jogo = y[indice_matriz2]\n",
    "    resultado.append([numero_jogo, jogo, ano]) \n",
    "    indice_matriz2 += 1\n",
    "\n",
    "\n",
    "numeros_jogo = []\n",
    "detalhes_jogo = []\n",
    "anos = []\n",
    "\n",
    "# Itere sobre o resultado\n",
    "for item in resultado:\n",
    "    numeros_jogo.append(item[0])\n",
    "    detalhes_jogo.append(item[1])\n",
    "    anos.append(item[2])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "a4632dac-41db-4458-87b6-35001fac9319",
   "metadata": {},
   "outputs": [],
   "source": [
    "lista_de_listas = []\n",
    "# Itere pelos dados originais e crie uma nova lista para cada elemento\n",
    "for elemento in detalhes_jogo:\n",
    "    nova_lista = [item for sublist in elemento for item in sublist]\n",
    "    lista_de_listas.append(nova_lista)\n",
    "lista_de_listas = list(zip(numeros_jogo, lista_de_listas, anos))\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8a4bf9a4-1536-4592-999d-4dfc02334608",
   "metadata": {},
   "outputs": [],
   "source": [
    "pd_teste = pd.DataFrame({'testando':lista_de_listas})\n",
    "pd_teste.to_excel(f\"C:/Users/aliss/OneDrive/Área de Trabalho/NovoSistema/valor.xlsx\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "42941751-6a3c-428d-8c34-6e08759dd2e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "detalhe = []\n",
    "jogo = []\n",
    "ano=[]\n",
    "\n",
    "for elemento in lista_de_listas:\n",
    "    numero_jogo = elemento[0]\n",
    "    gols_detalhes = elemento[1]\n",
    "    anos=elemento[2]\n",
    "    detalhe.extend(gols_detalhes)\n",
    "   \n",
    "    contagem_t = 0\n",
    "    for texto in gols_detalhes:\n",
    "        contagem_t += texto.count('T)')\n",
    "    \n",
    "    jogo.extend([numero_jogo] * contagem_t)\n",
    "    ano.extend([anos] * contagem_t)\n",
    "\n",
    "nomes_jogadores = []\n",
    "nomes_times = []\n",
    "\n",
    "for i, dado in enumerate(detalhe):\n",
    "    \n",
    "    if i % 2 == 0:\n",
    "        nomes = dado.split(')')\n",
    "        nomes = [nome.strip() + ')' for nome in nomes if nome.strip()]\n",
    "        nomes_jogadores.extend(nomes)\n",
    "    else:\n",
    "        # Multiplicar o nome do time pelo número de jogadores\n",
    "        nomes_times.extend([dado] * len(nomes))\n",
    "times = []\n",
    "uf = []\n",
    "for i in nomes_times:\n",
    "    j = i.split('-')\n",
    "    times.append(j[0])\n",
    "    uf.append(j[1].strip())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "7720db57-675b-4022-9847-f1f5562d6720",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Criando Regex através de Ferramenta de identificação de padrões \n",
    "padrao = r'([\\w\\s]+)\\s(\\d{1,2}\\+?\\d*)\\'\\s\\((\\d{1,2}[+-]?\\d*\\w*)\\)'\n",
    "# Lista para armazenar os resultados\n",
    "resultados = []\n",
    "Atleta = []\n",
    "Minutos = []\n",
    "Tempo = []\n",
    "Minutos_Acrescido = []\n",
    "\n",
    "# Loop sobre as strings\n",
    "for s in nomes_jogadores:\n",
    "    correspondencias = re.search(padrao, s)\n",
    "    if correspondencias:\n",
    "        nome = correspondencias.group(1)\n",
    "        minuto = correspondencias.group(2)\n",
    "        tempo = correspondencias.group(3)\n",
    "        resultados.append({'Nome': nome, 'Minuto': minuto, 'Tempo': tempo})\n",
    "        Atleta.append(nome)\n",
    "        Minutos.append(minuto)\n",
    "        Tempo.append(tempo)\n",
    "nomeOrientado=[]\n",
    "for i in Atleta:\n",
    "    x = i.capitalize()\n",
    "    nomeOrientado.append(x)\n",
    "    \n",
    "    \n",
    "\n",
    "for i in Minutos:\n",
    "    x = i.split('+')\n",
    "    z = int(x[0])\n",
    "    \n",
    "    for acrescimo in x[1:]:\n",
    "        z += int(acrescimo)\n",
    "\n",
    "    Minutos_Acrescido.append(z)\n",
    "\n",
    "nomeOrientado\n",
    "\n",
    "\n",
    "dy = pd.DataFrame({\n",
    "    'Nome': nomeOrientado,\n",
    "    'Minuto': Minutos_Acrescido,\n",
    "    'Tempo': Tempo,\n",
    "    'Time': times,\n",
    "    'UF': uf,\n",
    "    'Jogo': jogo,\n",
    "    'Ano': ano\n",
    "})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "fef4290f-dc63-41fd-8a6c-4651c5d31bec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nome</th>\n",
       "      <th>Minuto</th>\n",
       "      <th>Time</th>\n",
       "      <th>Jogo</th>\n",
       "      <th>Ano</th>\n",
       "      <th>Rodada</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Andre Felipe</td>\n",
       "      <td>54</td>\n",
       "      <td>Gremio</td>\n",
       "      <td>1</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Pablo</td>\n",
       "      <td>51</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>2</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Nikao</td>\n",
       "      <td>58</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>2</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Carleto</td>\n",
       "      <td>68</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>2</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Rossetto</td>\n",
       "      <td>87</td>\n",
       "      <td>Athletico Paranaense</td>\n",
       "      <td>2</td>\n",
       "      <td>2018</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5293</th>\n",
       "      <td>Ademir</td>\n",
       "      <td>92</td>\n",
       "      <td>Bahia</td>\n",
       "      <td>379</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5294</th>\n",
       "      <td>Paulinho</td>\n",
       "      <td>35</td>\n",
       "      <td>Atletico Mineiro</td>\n",
       "      <td>379</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5295</th>\n",
       "      <td>Clayson</td>\n",
       "      <td>12</td>\n",
       "      <td>Cuiaba</td>\n",
       "      <td>380</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5296</th>\n",
       "      <td>Derik</td>\n",
       "      <td>16</td>\n",
       "      <td>Cuiaba</td>\n",
       "      <td>380</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5297</th>\n",
       "      <td>Clayson</td>\n",
       "      <td>95</td>\n",
       "      <td>Cuiaba</td>\n",
       "      <td>380</td>\n",
       "      <td>2023</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5298 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              Nome  Minuto                  Time  Jogo   Ano  Rodada\n",
       "0     Andre Felipe      54                Gremio     1  2018       1\n",
       "1            Pablo      51  Athletico Paranaense     2  2018       1\n",
       "2            Nikao      58  Athletico Paranaense     2  2018       1\n",
       "3          Carleto      68  Athletico Paranaense     2  2018       1\n",
       "4         Rossetto      87  Athletico Paranaense     2  2018       1\n",
       "...            ...     ...                   ...   ...   ...     ...\n",
       "5293        Ademir      92                 Bahia   379  2023      38\n",
       "5294      Paulinho      35      Atletico Mineiro   379  2023      38\n",
       "5295       Clayson      12                Cuiaba   380  2023      38\n",
       "5296         Derik      16                Cuiaba   380  2023      38\n",
       "5297       Clayson      95                Cuiaba   380  2023      38\n",
       "\n",
       "[5298 rows x 6 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dy['Jogo'] = pd.to_numeric(dy['Jogo'], errors='coerce').astype('Int64')\n",
    "dy['Time'] = dy['Time'].apply(unidecode)\n",
    "dy['Time'] = dy['Time'].str.replace(r'\\s*S\\.?A\\.?F\\s*', '', regex=True, case=False)  # Remove SAF\n",
    "dy['Time'] = dy['Time'].apply(str.title)\n",
    "dy['Nome'] = dy['Nome'].apply(str.title)\n",
    "dy['Time'] = dy['Time'].apply(lambda x: x.replace('Fc', '').strip())  # Remove \"Fc\" e espaços antes e depois\n",
    "dy['Minuto'] = pd.to_numeric(dy['Minuto'], errors='coerce')\n",
    "dy['Minuto'] = dy.apply(lambda row: row['Minuto'] + 45 if row['Tempo'] == '2ºT' else row['Minuto'], axis=1)\n",
    "dy = dy.drop('Tempo', axis=1)\n",
    "dy['Rodada'] = dy['Jogo'].apply(lambda num_jogo: int(num_jogo / 10) if num_jogo % 10 == 0 else int(num_jogo // 10) + 1)\n",
    "dy['Time'] = dy.apply(lambda row: 'Athletico Paranaense' if row['Time'] == 'Atletico' and row['UF'] == 'PR' else row['Time'],axis=1)\n",
    "dy['Time'] = dy.apply(lambda row: 'America Mineiro' if row['Time'] == 'America' and row['UF'] == 'MG' else row['Time'],axis=1)\n",
    "dy['Time'] = dy.apply(lambda row: 'Atletico Mineiro' if row['Time'] == 'Atletico' and row['UF'] == 'MG' else row['Time'],axis=1)\n",
    "dy['Time'] = dy.apply(lambda row: 'Atletico Goianiense' if row['Time'] == 'Atletico' and row['UF'] == 'GO' else row['Time'],axis=1)\n",
    "dy['Time'] = dy['Time'].str.replace('.', '')\n",
    "dy = dy.drop('UF',axis=1)\n",
    "dy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "399d318b-8c61-4814-adc7-dfaa46950278",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Exportando todos Dataframe para Excel\n",
    "with pd.ExcelWriter(f\"C:/Users/aliss/OneDrive/Área de Trabalho/NovoSistema/CampeonatoBrasileiro_{AnoInicial}-{AnoFinal}_SerieA.xlsx\") as writer:\n",
    "    # Escreva cada DataFrame em uma planilha diferente\n",
    "    df.to_excel(writer, sheet_name='Jogos', index=False)\n",
    "    dx.to_excel(writer, sheet_name='DesempenhoIndividual', index=False)\n",
    "    classificacao.to_excel(writer, sheet_name='DesempenhoTimes', index=False)\n",
    "    dy.to_excel(writer, sheet_name='Gols', index=False)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
